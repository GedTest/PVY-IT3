# Generated by Django 3.2 on 2021-04-12 10:20

import catalog.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Set',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200, verbose_name='set name')),
                ('year', models.IntegerField(verbose_name='release year')),
                ('number_of_pieces', models.IntegerField(default=100, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('price', models.FloatField(default=0.0, null=True, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='price')),
                ('image', models.ImageField(null=True, upload_to=catalog.models.image_path)),
            ],
        ),
        migrations.CreateModel(
            name='Manual',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200, verbose_name='manual name')),
                ('number_of_pages', models.IntegerField(default=0, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('set', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='catalog.set')),
            ],
        ),
        migrations.CreateModel(
            name='Brick',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200, verbose_name='catalog name')),
                ('color', models.CharField(max_length=7, verbose_name='color')),
                ('type', models.CharField(choices=[('standard', 'standard'), ('special', 'special')], max_length=8)),
                ('image', models.ImageField(null=True, upload_to=catalog.models.image_path)),
                ('sets', models.ManyToManyField(to='catalog.Set')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
    ]
